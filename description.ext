OnLoadName="[IFA3] WW2 Rush";
onLoadMission = "Battlefield brought to ArmA3";
author = "A. Roman";
onLoadMissionTime = 0;

// Debug
enableDebugConsole[] = {"76561198039414328"};

// Functions
class CfgFunctions {
    #include "bin\functions.h"
};

// RemoteExec Filters
class CfgRemoteExec {
    class Functions {
        mode = 1;
        jip = 1;
        #include "bin\restrictions.h"
    };

    class Commands
    {
        mode = 1;
        class setFuel {allowedTargets = 0;};
    };
};

// Configs
#include "config\master.h"
#include "config\factions.h"
#include "config\perks.h"
#include "config\map_settings.h"
#include "config\hints.h"

onPauseScript[] = {client_fnc_saveStatistics};

// Disable briefing
briefing = 0;

// Disable debriefing
debriefing = 0;

/* showHUD[] = {
    1,   // Scripted HUD (same as showHUD command)
    0,  // Vehicle + soldier info
    0,  // Vehicle radar [HIDDEN]
    0,  // Vehicle compass [HIDDEN]
    0,  // Tank direction indicator
    1,   // Commanding menu
    0,  // Group Bar
    1    // HUD Weapon Cursors
}; */

// Wreck remover
wreckManagerMode = 1;
wreckLimit = 1;
wreckRemovalMinTime = 5;
wreckRemovalMaxTime = 5;

// Header
class Header
{
	gameType = DM; // Game type, see 'class' columns in the table below
	minPlayers = 8; //min # of players the mission supports
	maxPlayers = 60; //max # of players the mission supports
};

// Channels
disableChannels[]={2,6};

// Sounds
#include "config\sounds.h"

// Other hpps
#include "dialogs\common.h"

// Dialogs
#include "dialogs\dialogs.h"

// Additional RscTitles
class RscTitles {
  #include "dialogs\titles.h"
};

// Skip the role selection screen
joinUnassigned = 1;

// Disable Ai
disabledAI = 1;

// Respawn
respawnDelay = 15;
respawn = "BASE";
respawnDialog = 0;

// Make corpses despawn
corpseLimit = 1;
corpseRemovalMinTime = 1;
corpseRemovalMaxTime = 1;
corpseManagerMode = 1;

// Debriefing
class CfgDebriefing
{
    class MatchEnd
    {
        title = "MATCH ENDED";
        subtitle = "";
        description = "";
        pictureBackground = "";
        picture = "";
        pictureColor[] = {0.96,0.65,0.12,0.8};
    };

    class JoinWEST
    {
        title = "AUTO TEAM BALANCE";
        subtitle = "YOU HAVE BEEN AUTO TEAM BALANCED";
        description = "Please return to the lobby and join the Blue team! (Your progress has been saved)";
        pictureBackground = "";
        picture = "";
        pictureColor[] = {0.96,0.65,0.12,0.8};
    };

    class Joinindependent
    {
        title = "AUTO TEAM BALANCE";
        subtitle = "YOU HAVE BEEN AUTO TEAM BALANCED";
        description = "Please return to the lobby and join the Green team! (Your progress has been saved)";
        pictureBackground = "";
        picture = "";
        pictureColor[] = {0.96,0.65,0.12,0.8};
    };

    class teamFullindependent
    {
        title = "AUTO TEAM BALANCE";
        subtitle = "THIS TEAM HAS TOO MANY PLAYERS";
        description = "Please return to the lobby and join the Green team.";
        pictureBackground = "";
        picture = "";
        pictureColor[] = {0.96,0.65,0.12,0.8};
    };

    class teamFullWEST
    {
        title = "AUTO TEAM BALANCE";
        subtitle = "THIS TEAM HAS TOO MANY PLAYERS";
        description = "Please return to the lobby and join Blue team.";
        pictureBackground = "";
        picture = "";
        pictureColor[] = {0.96,0.65,0.12,0.8};
    };
};

class Params {
  class header_1 {
    title = "========== TICKETS SETTINGS ==========";
  };
  class MaxTickets {
    title = "Maximum tickets per objective:";
    values[] = {100, 200, 300, 400, 500};
    default = 300;
  };
  class MinTickets {
    title = "Minimum tickets per objective:";
    values[] = {25, 50, 75, 100};
    default = 25;
  };
  class TicketsRate {
    title = "Tickets per attacker:";
    values[] = {5, 7.5, 10, 12.5, 15, 20, 30};
    default = 10;
  };
  class header_2 {
    title = "========== TIME SETTINGS ==========";
  };
  class LobbyTime {
    title = "Interval between rounds:";
    values[] = {10, 20, 30, 60, 120, 180, 240, 300};
    default = 60;
  };
  class RoundTime {
    title = "How many minutes per objective:";
    values[] = {5,7.5,10,12.5,15,17.5,20};
    texts[] = {"5m", "7m 30s", "10m", "12m 30s", "15m", "17m 30s", "20m"};
    default = 15;
  };
  class MaxMatchDuration {
    title = "Maximum match duration:";
    values[] = {3600, 7200, 10800, 14400, 18000};
    texts[] = {"1 Hour", "2 Hours", "3 Hours", "4 Hours", "5 Hours"};
    default = 10800;
  };
  class header_3 {
    title = "========== FACTIONS SETTINGS ==========";
  };
  #include "config\params.h"
  class header_4 {
    title = "========== FACTIONS SETTINGS ==========";
  };
  class SpawnSafeTime {
    title = "How many seconds should the spawn protection last:";
    values[] = {0, 3, 5, 10, 15};
    texts[] = {"0s", "3s", "5s", "10s", "15s"};
    default = 5;
  };
  class header_5 {
    title = "========== BOUNDARIES SETTINGS ==========";
  };
  class OutOfBoundsTime {
    title = "Time a player is allowed to trespass bounds:";
    values[] = {5, 10, 15, 20, 25, 30};
    default = 20;
  };
  class InitialFallBack {
    title = "How many seconds for the defenders to be ready:";
    values[] = {15, 30, 60, 90, 120};
    default = 60;
  };
  class header_6 {
    title = "========== MAP SETTINGS ==========";
  };
  class RotationsPerMatch {
    title = "How many rounds should be played before changing map:";
    values[] = {1,2,3,4,5,6};
    texts[] = {"1", "2", "3", "4", "5", "Never change map"};
    default = 2;
  };
  class MapWeather {
    title = "Load weather of the specific map or random:";
    values[] = {0, 1};
    texts[] = {"RANDOM", "MAP"};
    default = 0;
  };
  class AutoTeamBalancer {
    title = "Automatic Team-Balancer:";
    values[] = {0, 1};
    texts[] = {"OFF", "ON"};
    default = 1;
  };
  class AutoTeamBalanceAtDifference {
    title = "Difference between teams for auto team-balancer:";
    values[] = {1, 2, 3, 4, 5};
    default = 3;
  };
  class InfantryFPOnly {
    title = "Enforcement of 1st Person only for infantry:";
    values[] = {0, 1};
    texts[] = {"OFF", "ON"};
    default = 1;
  };
  class VehicleFPOnly {
    title = "Enforcement of 1st Person only for vehicles:";
    values[] = {0, 1};
    texts[] = {"OFF", "ON"};
    default = 0;
  };
  class HardcoreMode {
    title = "Enable hardcore mode (no icons or aids):";
    values[] = {0, 1};
    texts[] = {"OFF", "ON"};
    default = 0;
  };
  class ClassLimits {
    title = "Enable class restrictions: ";
    values[] = {0, 1};
    texts[] = {"OFF", "ON"};
    default = 1;
  };
  class ClassLimits_support {
    title = "Max percentage of players on a side with SUPPORT class: ";
    values[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    texts[] = {"0%", "10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%"};
    default = 2;
  };
  class ClassLimits_engineer {
    title = "Max percentage of players on a side with ENGINEER class: ";
    values[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    texts[] = {"0%", "10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%"};
    default = 2;
  };
  class ClassLimits_recon {
    title = "Max players on a side with RECON class: ";
    values[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    texts[] = {"0%", "10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%"};
    default = 1;
  };
};
